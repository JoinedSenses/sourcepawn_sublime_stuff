# Generated from ./SourcePawnLexer.g4 by ANTLR 4.10.1
from antlr4 import *
from io import StringIO
import sys
if sys.version_info[1] > 5:
    from typing import TextIO
else:
    from typing.io import TextIO


def serializedATN():
    return [
        4,0,107,887,6,-1,2,0,7,0,2,1,7,1,2,2,7,2,2,3,7,3,2,4,7,4,2,5,7,5,
        2,6,7,6,2,7,7,7,2,8,7,8,2,9,7,9,2,10,7,10,2,11,7,11,2,12,7,12,2,
        13,7,13,2,14,7,14,2,15,7,15,2,16,7,16,2,17,7,17,2,18,7,18,2,19,7,
        19,2,20,7,20,2,21,7,21,2,22,7,22,2,23,7,23,2,24,7,24,2,25,7,25,2,
        26,7,26,2,27,7,27,2,28,7,28,2,29,7,29,2,30,7,30,2,31,7,31,2,32,7,
        32,2,33,7,33,2,34,7,34,2,35,7,35,2,36,7,36,2,37,7,37,2,38,7,38,2,
        39,7,39,2,40,7,40,2,41,7,41,2,42,7,42,2,43,7,43,2,44,7,44,2,45,7,
        45,2,46,7,46,2,47,7,47,2,48,7,48,2,49,7,49,2,50,7,50,2,51,7,51,2,
        52,7,52,2,53,7,53,2,54,7,54,2,55,7,55,2,56,7,56,2,57,7,57,2,58,7,
        58,2,59,7,59,2,60,7,60,2,61,7,61,2,62,7,62,2,63,7,63,2,64,7,64,2,
        65,7,65,2,66,7,66,2,67,7,67,2,68,7,68,2,69,7,69,2,70,7,70,2,71,7,
        71,2,72,7,72,2,73,7,73,2,74,7,74,2,75,7,75,2,76,7,76,2,77,7,77,2,
        78,7,78,2,79,7,79,2,80,7,80,2,81,7,81,2,82,7,82,2,83,7,83,2,84,7,
        84,2,85,7,85,2,86,7,86,2,87,7,87,2,88,7,88,2,89,7,89,2,90,7,90,2,
        91,7,91,2,92,7,92,2,93,7,93,2,94,7,94,2,95,7,95,2,96,7,96,2,97,7,
        97,2,98,7,98,2,99,7,99,2,100,7,100,2,101,7,101,2,102,7,102,2,103,
        7,103,2,104,7,104,2,105,7,105,2,106,7,106,2,107,7,107,2,108,7,108,
        2,109,7,109,2,110,7,110,2,111,7,111,2,112,7,112,2,113,7,113,2,114,
        7,114,2,115,7,115,1,0,1,0,1,0,3,0,237,8,0,1,1,1,1,4,1,241,8,1,11,
        1,12,1,242,1,1,1,1,1,2,1,2,1,2,5,2,250,8,2,10,2,12,2,253,9,2,1,2,
        1,2,1,2,1,2,3,2,259,8,2,3,2,261,8,2,1,2,1,2,5,2,265,8,2,10,2,12,
        2,268,9,2,1,3,1,3,5,3,272,8,3,10,3,12,3,275,9,3,1,3,1,3,1,4,1,4,
        3,4,281,8,4,1,5,1,5,1,6,1,6,5,6,287,8,6,10,6,12,6,290,9,6,1,6,1,
        6,3,6,294,8,6,1,6,4,6,297,8,6,11,6,12,6,298,1,6,4,6,302,8,6,11,6,
        12,6,303,1,6,1,6,1,7,1,7,5,7,310,8,7,10,7,12,7,313,9,7,1,7,1,7,1,
        8,1,8,1,8,1,8,1,9,1,9,1,9,1,9,1,9,1,10,1,10,1,10,1,10,1,10,1,10,
        1,11,1,11,1,11,1,11,1,11,1,12,1,12,1,12,1,12,1,12,1,12,1,12,1,12,
        1,13,1,13,1,13,1,13,1,13,1,14,1,14,1,14,1,14,1,14,1,14,1,15,1,15,
        1,15,1,15,1,15,1,15,1,15,1,15,1,15,1,16,1,16,1,16,1,16,1,16,1,16,
        1,16,1,16,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,17,1,18,1,18,1,18,
        1,18,1,18,1,18,1,18,1,19,1,19,1,19,1,20,1,20,1,20,1,20,1,20,1,21,
        1,21,1,21,1,21,1,21,1,22,1,22,1,22,1,22,1,22,1,22,1,23,1,23,1,23,
        1,23,1,23,1,23,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,24,1,25,1,25,
        1,25,1,25,1,25,1,25,1,25,1,25,1,25,1,26,1,26,1,26,1,26,1,27,1,27,
        1,27,1,27,1,27,1,27,1,27,1,28,1,28,1,28,1,29,1,29,1,29,1,29,1,30,
        1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,30,1,31,1,31,1,31,1,31,
        1,31,1,31,1,31,1,32,1,32,1,32,1,32,1,33,1,33,1,33,1,33,1,33,1,34,
        1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,34,1,35,
        1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,35,1,36,1,36,1,36,1,36,1,36,
        1,36,1,36,1,36,1,36,1,37,1,37,1,37,1,37,1,37,1,37,1,37,1,38,1,38,
        1,38,1,38,1,38,1,38,1,38,1,39,1,39,1,39,1,39,1,39,1,39,1,39,1,40,
        1,40,1,40,1,40,1,40,1,40,1,40,1,41,1,41,1,41,1,41,1,41,1,41,1,41,
        1,41,1,41,1,41,1,41,1,41,1,41,1,41,1,42,1,42,1,42,1,42,1,42,1,42,
        1,43,1,43,1,43,1,43,1,43,1,43,1,43,1,44,1,44,1,44,1,44,1,44,1,44,
        1,44,1,45,1,45,1,45,1,45,1,45,1,46,1,46,1,46,1,46,1,46,1,47,1,47,
        1,47,1,47,1,47,1,47,1,47,1,47,1,48,1,48,1,48,1,48,1,48,1,48,1,48,
        1,48,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,49,1,50,1,50,1,50,1,50,
        1,50,1,51,1,51,1,51,1,51,1,51,1,51,1,52,1,52,1,53,1,53,1,54,1,54,
        1,55,1,55,1,56,1,56,1,57,1,57,1,58,1,58,1,59,1,59,1,60,1,60,1,61,
        1,61,1,62,1,62,1,63,1,63,1,64,1,64,1,65,1,65,1,66,1,66,1,67,1,67,
        1,68,1,68,1,69,1,69,1,70,1,70,1,71,1,71,1,71,1,72,1,72,1,72,1,73,
        1,73,1,73,1,74,1,74,1,74,1,75,1,75,1,75,1,76,1,76,1,76,1,77,1,77,
        1,77,1,78,1,78,1,78,1,79,1,79,1,79,1,79,1,80,1,80,1,80,1,80,1,81,
        1,81,1,81,1,82,1,82,1,82,1,82,1,83,1,83,1,83,1,84,1,84,1,84,1,85,
        1,85,1,85,1,86,1,86,1,86,1,87,1,87,1,87,1,88,1,88,1,88,1,89,1,89,
        1,89,1,90,1,90,1,90,1,91,1,91,1,91,1,92,1,92,1,93,1,93,1,94,1,94,
        1,95,1,95,1,95,1,96,1,96,1,97,1,97,1,98,1,98,1,98,1,98,1,99,1,99,
        1,99,5,99,736,8,99,10,99,12,99,739,9,99,1,100,1,100,1,100,1,100,
        1,100,5,100,746,8,100,10,100,12,100,749,9,100,1,101,1,101,1,101,
        1,101,3,101,755,8,101,1,101,3,101,758,8,101,1,101,3,101,761,8,101,
        1,101,3,101,764,8,101,1,101,3,101,767,8,101,1,101,3,101,770,8,101,
        1,101,3,101,773,8,101,1,101,3,101,776,8,101,1,102,1,102,1,103,1,
        103,1,104,1,104,1,105,1,105,3,105,786,8,105,1,106,1,106,3,106,790,
        8,106,1,107,1,107,1,107,3,107,795,8,107,1,108,1,108,3,108,799,8,
        108,1,108,3,108,802,8,108,1,108,1,108,1,108,1,108,1,108,1,108,1,
        108,1,108,3,108,812,8,108,1,108,3,108,815,8,108,1,109,1,109,1,109,
        1,109,3,109,821,8,109,1,109,3,109,824,8,109,1,109,3,109,827,8,109,
        1,110,1,110,1,110,1,110,3,110,833,8,110,1,110,3,110,836,8,110,3,
        110,838,8,110,1,111,4,111,841,8,111,11,111,12,111,842,1,111,1,111,
        1,112,1,112,3,112,849,8,112,1,112,3,112,852,8,112,1,112,1,112,1,
        113,1,113,1,113,1,113,5,113,860,8,113,10,113,12,113,863,9,113,1,
        113,1,113,1,113,1,113,1,113,1,114,1,114,1,114,1,114,5,114,874,8,
        114,10,114,12,114,877,9,114,1,114,1,114,1,115,1,115,5,115,883,8,
        115,10,115,12,115,886,9,115,2,288,861,0,116,1,1,3,2,5,3,7,4,9,5,
        11,6,13,7,15,8,17,9,19,10,21,11,23,12,25,13,27,14,29,15,31,16,33,
        17,35,18,37,19,39,20,41,21,43,22,45,23,47,24,49,25,51,26,53,27,55,
        28,57,29,59,30,61,31,63,32,65,33,67,34,69,35,71,36,73,37,75,38,77,
        39,79,40,81,41,83,42,85,43,87,44,89,45,91,46,93,47,95,48,97,49,99,
        50,101,51,103,52,105,53,107,54,109,55,111,56,113,57,115,58,117,59,
        119,60,121,61,123,62,125,63,127,64,129,65,131,66,133,67,135,68,137,
        69,139,70,141,71,143,72,145,73,147,74,149,75,151,76,153,77,155,78,
        157,79,159,80,161,81,163,82,165,83,167,84,169,85,171,86,173,87,175,
        88,177,89,179,90,181,91,183,92,185,93,187,94,189,95,191,96,193,97,
        195,98,197,99,199,100,201,101,203,102,205,0,207,0,209,0,211,0,213,
        0,215,0,217,0,219,0,221,0,223,103,225,104,227,105,229,106,231,107,
        1,0,13,1,0,10,10,1,0,48,49,1,0,48,57,3,0,48,57,65,70,97,102,4,0,
        10,10,13,13,34,34,92,92,4,0,10,10,13,13,39,39,92,92,1,0,48,52,1,
        0,48,53,10,0,34,34,37,37,39,39,92,92,97,98,101,102,110,110,114,114,
        116,116,118,118,2,0,9,9,32,32,2,0,10,10,13,13,3,0,65,90,95,95,97,
        122,4,0,48,57,65,90,95,95,97,122,926,0,1,1,0,0,0,0,3,1,0,0,0,0,5,
        1,0,0,0,0,7,1,0,0,0,0,9,1,0,0,0,0,11,1,0,0,0,0,13,1,0,0,0,0,15,1,
        0,0,0,0,17,1,0,0,0,0,19,1,0,0,0,0,21,1,0,0,0,0,23,1,0,0,0,0,25,1,
        0,0,0,0,27,1,0,0,0,0,29,1,0,0,0,0,31,1,0,0,0,0,33,1,0,0,0,0,35,1,
        0,0,0,0,37,1,0,0,0,0,39,1,0,0,0,0,41,1,0,0,0,0,43,1,0,0,0,0,45,1,
        0,0,0,0,47,1,0,0,0,0,49,1,0,0,0,0,51,1,0,0,0,0,53,1,0,0,0,0,55,1,
        0,0,0,0,57,1,0,0,0,0,59,1,0,0,0,0,61,1,0,0,0,0,63,1,0,0,0,0,65,1,
        0,0,0,0,67,1,0,0,0,0,69,1,0,0,0,0,71,1,0,0,0,0,73,1,0,0,0,0,75,1,
        0,0,0,0,77,1,0,0,0,0,79,1,0,0,0,0,81,1,0,0,0,0,83,1,0,0,0,0,85,1,
        0,0,0,0,87,1,0,0,0,0,89,1,0,0,0,0,91,1,0,0,0,0,93,1,0,0,0,0,95,1,
        0,0,0,0,97,1,0,0,0,0,99,1,0,0,0,0,101,1,0,0,0,0,103,1,0,0,0,0,105,
        1,0,0,0,0,107,1,0,0,0,0,109,1,0,0,0,0,111,1,0,0,0,0,113,1,0,0,0,
        0,115,1,0,0,0,0,117,1,0,0,0,0,119,1,0,0,0,0,121,1,0,0,0,0,123,1,
        0,0,0,0,125,1,0,0,0,0,127,1,0,0,0,0,129,1,0,0,0,0,131,1,0,0,0,0,
        133,1,0,0,0,0,135,1,0,0,0,0,137,1,0,0,0,0,139,1,0,0,0,0,141,1,0,
        0,0,0,143,1,0,0,0,0,145,1,0,0,0,0,147,1,0,0,0,0,149,1,0,0,0,0,151,
        1,0,0,0,0,153,1,0,0,0,0,155,1,0,0,0,0,157,1,0,0,0,0,159,1,0,0,0,
        0,161,1,0,0,0,0,163,1,0,0,0,0,165,1,0,0,0,0,167,1,0,0,0,0,169,1,
        0,0,0,0,171,1,0,0,0,0,173,1,0,0,0,0,175,1,0,0,0,0,177,1,0,0,0,0,
        179,1,0,0,0,0,181,1,0,0,0,0,183,1,0,0,0,0,185,1,0,0,0,0,187,1,0,
        0,0,0,189,1,0,0,0,0,191,1,0,0,0,0,193,1,0,0,0,0,195,1,0,0,0,0,197,
        1,0,0,0,0,199,1,0,0,0,0,201,1,0,0,0,0,203,1,0,0,0,0,223,1,0,0,0,
        0,225,1,0,0,0,0,227,1,0,0,0,0,229,1,0,0,0,0,231,1,0,0,0,1,236,1,
        0,0,0,3,238,1,0,0,0,5,246,1,0,0,0,7,269,1,0,0,0,9,280,1,0,0,0,11,
        282,1,0,0,0,13,284,1,0,0,0,15,307,1,0,0,0,17,316,1,0,0,0,19,320,
        1,0,0,0,21,325,1,0,0,0,23,331,1,0,0,0,25,336,1,0,0,0,27,344,1,0,
        0,0,29,349,1,0,0,0,31,355,1,0,0,0,33,364,1,0,0,0,35,372,1,0,0,0,
        37,380,1,0,0,0,39,387,1,0,0,0,41,390,1,0,0,0,43,395,1,0,0,0,45,400,
        1,0,0,0,47,406,1,0,0,0,49,412,1,0,0,0,51,420,1,0,0,0,53,429,1,0,
        0,0,55,433,1,0,0,0,57,440,1,0,0,0,59,443,1,0,0,0,61,447,1,0,0,0,
        63,457,1,0,0,0,65,464,1,0,0,0,67,468,1,0,0,0,69,473,1,0,0,0,71,486,
        1,0,0,0,73,495,1,0,0,0,75,504,1,0,0,0,77,511,1,0,0,0,79,518,1,0,
        0,0,81,525,1,0,0,0,83,532,1,0,0,0,85,546,1,0,0,0,87,552,1,0,0,0,
        89,559,1,0,0,0,91,566,1,0,0,0,93,571,1,0,0,0,95,576,1,0,0,0,97,584,
        1,0,0,0,99,592,1,0,0,0,101,600,1,0,0,0,103,605,1,0,0,0,105,611,1,
        0,0,0,107,613,1,0,0,0,109,615,1,0,0,0,111,617,1,0,0,0,113,619,1,
        0,0,0,115,621,1,0,0,0,117,623,1,0,0,0,119,625,1,0,0,0,121,627,1,
        0,0,0,123,629,1,0,0,0,125,631,1,0,0,0,127,633,1,0,0,0,129,635,1,
        0,0,0,131,637,1,0,0,0,133,639,1,0,0,0,135,641,1,0,0,0,137,643,1,
        0,0,0,139,645,1,0,0,0,141,647,1,0,0,0,143,649,1,0,0,0,145,652,1,
        0,0,0,147,655,1,0,0,0,149,658,1,0,0,0,151,661,1,0,0,0,153,664,1,
        0,0,0,155,667,1,0,0,0,157,670,1,0,0,0,159,673,1,0,0,0,161,677,1,
        0,0,0,163,681,1,0,0,0,165,684,1,0,0,0,167,688,1,0,0,0,169,691,1,
        0,0,0,171,694,1,0,0,0,173,697,1,0,0,0,175,700,1,0,0,0,177,703,1,
        0,0,0,179,706,1,0,0,0,181,709,1,0,0,0,183,712,1,0,0,0,185,715,1,
        0,0,0,187,717,1,0,0,0,189,719,1,0,0,0,191,721,1,0,0,0,193,724,1,
        0,0,0,195,726,1,0,0,0,197,728,1,0,0,0,199,732,1,0,0,0,201,740,1,
        0,0,0,203,750,1,0,0,0,205,777,1,0,0,0,207,779,1,0,0,0,209,781,1,
        0,0,0,211,785,1,0,0,0,213,789,1,0,0,0,215,794,1,0,0,0,217,796,1,
        0,0,0,219,816,1,0,0,0,221,828,1,0,0,0,223,840,1,0,0,0,225,851,1,
        0,0,0,227,855,1,0,0,0,229,869,1,0,0,0,231,880,1,0,0,0,233,237,3,
        201,100,0,234,237,3,203,101,0,235,237,3,199,99,0,236,233,1,0,0,0,
        236,234,1,0,0,0,236,235,1,0,0,0,237,2,1,0,0,0,238,240,5,39,0,0,239,
        241,3,213,106,0,240,239,1,0,0,0,241,242,1,0,0,0,242,240,1,0,0,0,
        242,243,1,0,0,0,243,244,1,0,0,0,244,245,5,39,0,0,245,4,1,0,0,0,246,
        251,3,207,103,0,247,250,5,95,0,0,248,250,3,207,103,0,249,247,1,0,
        0,0,249,248,1,0,0,0,250,253,1,0,0,0,251,249,1,0,0,0,251,252,1,0,
        0,0,252,254,1,0,0,0,253,251,1,0,0,0,254,255,5,46,0,0,255,260,3,207,
        103,0,256,258,5,101,0,0,257,259,5,45,0,0,258,257,1,0,0,0,258,259,
        1,0,0,0,259,261,1,0,0,0,260,256,1,0,0,0,260,261,1,0,0,0,261,266,
        1,0,0,0,262,265,5,95,0,0,263,265,3,207,103,0,264,262,1,0,0,0,264,
        263,1,0,0,0,265,268,1,0,0,0,266,264,1,0,0,0,266,267,1,0,0,0,267,
        6,1,0,0,0,268,266,1,0,0,0,269,273,5,34,0,0,270,272,3,211,105,0,271,
        270,1,0,0,0,272,275,1,0,0,0,273,271,1,0,0,0,273,274,1,0,0,0,274,
        276,1,0,0,0,275,273,1,0,0,0,276,277,5,34,0,0,277,8,1,0,0,0,278,281,
        3,45,22,0,279,281,3,93,46,0,280,278,1,0,0,0,280,279,1,0,0,0,281,
        10,1,0,0,0,282,283,3,67,33,0,283,12,1,0,0,0,284,296,5,35,0,0,285,
        287,8,0,0,0,286,285,1,0,0,0,287,290,1,0,0,0,288,289,1,0,0,0,288,
        286,1,0,0,0,289,291,1,0,0,0,290,288,1,0,0,0,291,293,5,92,0,0,292,
        294,5,13,0,0,293,292,1,0,0,0,293,294,1,0,0,0,294,295,1,0,0,0,295,
        297,5,10,0,0,296,288,1,0,0,0,297,298,1,0,0,0,298,296,1,0,0,0,298,
        299,1,0,0,0,299,301,1,0,0,0,300,302,8,0,0,0,301,300,1,0,0,0,302,
        303,1,0,0,0,303,301,1,0,0,0,303,304,1,0,0,0,304,305,1,0,0,0,305,
        306,6,6,0,0,306,14,1,0,0,0,307,311,5,35,0,0,308,310,8,0,0,0,309,
        308,1,0,0,0,310,313,1,0,0,0,311,309,1,0,0,0,311,312,1,0,0,0,312,
        314,1,0,0,0,313,311,1,0,0,0,314,315,6,7,0,0,315,16,1,0,0,0,316,317,
        5,97,0,0,317,318,5,110,0,0,318,319,5,121,0,0,319,18,1,0,0,0,320,
        321,5,98,0,0,321,322,5,111,0,0,322,323,5,111,0,0,323,324,5,108,0,
        0,324,20,1,0,0,0,325,326,5,98,0,0,326,327,5,114,0,0,327,328,5,101,
        0,0,328,329,5,97,0,0,329,330,5,107,0,0,330,22,1,0,0,0,331,332,5,
        99,0,0,332,333,5,97,0,0,333,334,5,115,0,0,334,335,5,101,0,0,335,
        24,1,0,0,0,336,337,5,99,0,0,337,338,5,101,0,0,338,339,5,108,0,0,
        339,340,5,108,0,0,340,341,5,115,0,0,341,342,5,111,0,0,342,343,5,
        102,0,0,343,26,1,0,0,0,344,345,5,99,0,0,345,346,5,104,0,0,346,347,
        5,97,0,0,347,348,5,114,0,0,348,28,1,0,0,0,349,350,5,99,0,0,350,351,
        5,111,0,0,351,352,5,110,0,0,352,353,5,115,0,0,353,354,5,116,0,0,
        354,30,1,0,0,0,355,356,5,99,0,0,356,357,5,111,0,0,357,358,5,110,
        0,0,358,359,5,116,0,0,359,360,5,105,0,0,360,361,5,110,0,0,361,362,
        5,117,0,0,362,363,5,101,0,0,363,32,1,0,0,0,364,365,5,100,0,0,365,
        366,5,101,0,0,366,367,5,102,0,0,367,368,5,97,0,0,368,369,5,117,0,
        0,369,370,5,108,0,0,370,371,5,116,0,0,371,34,1,0,0,0,372,373,5,100,
        0,0,373,374,5,101,0,0,374,375,5,102,0,0,375,376,5,105,0,0,376,377,
        5,110,0,0,377,378,5,101,0,0,378,379,5,100,0,0,379,36,1,0,0,0,380,
        381,5,100,0,0,381,382,5,101,0,0,382,383,5,108,0,0,383,384,5,101,
        0,0,384,385,5,116,0,0,385,386,5,101,0,0,386,38,1,0,0,0,387,388,5,
        100,0,0,388,389,5,111,0,0,389,40,1,0,0,0,390,391,5,101,0,0,391,392,
        5,108,0,0,392,393,5,115,0,0,393,394,5,101,0,0,394,42,1,0,0,0,395,
        396,5,101,0,0,396,397,5,110,0,0,397,398,5,117,0,0,398,399,5,109,
        0,0,399,44,1,0,0,0,400,401,5,102,0,0,401,402,5,97,0,0,402,403,5,
        108,0,0,403,404,5,115,0,0,404,405,5,101,0,0,405,46,1,0,0,0,406,407,
        5,102,0,0,407,408,5,108,0,0,408,409,5,111,0,0,409,410,5,97,0,0,410,
        411,5,116,0,0,411,48,1,0,0,0,412,413,5,102,0,0,413,414,5,111,0,0,
        414,415,5,114,0,0,415,416,5,119,0,0,416,417,5,97,0,0,417,418,5,114,
        0,0,418,419,5,100,0,0,419,50,1,0,0,0,420,421,5,102,0,0,421,422,5,
        117,0,0,422,423,5,110,0,0,423,424,5,99,0,0,424,425,5,116,0,0,425,
        426,5,105,0,0,426,427,5,111,0,0,427,428,5,110,0,0,428,52,1,0,0,0,
        429,430,5,102,0,0,430,431,5,111,0,0,431,432,5,114,0,0,432,54,1,0,
        0,0,433,434,5,72,0,0,434,435,5,97,0,0,435,436,5,110,0,0,436,437,
        5,100,0,0,437,438,5,108,0,0,438,439,5,101,0,0,439,56,1,0,0,0,440,
        441,5,105,0,0,441,442,5,102,0,0,442,58,1,0,0,0,443,444,5,105,0,0,
        444,445,5,110,0,0,445,446,5,116,0,0,446,60,1,0,0,0,447,448,5,109,
        0,0,448,449,5,101,0,0,449,450,5,116,0,0,450,451,5,104,0,0,451,452,
        5,111,0,0,452,453,5,100,0,0,453,454,5,109,0,0,454,455,5,97,0,0,455,
        456,5,112,0,0,456,62,1,0,0,0,457,458,5,110,0,0,458,459,5,97,0,0,
        459,460,5,116,0,0,460,461,5,105,0,0,461,462,5,118,0,0,462,463,5,
        101,0,0,463,64,1,0,0,0,464,465,5,110,0,0,465,466,5,101,0,0,466,467,
        5,119,0,0,467,66,1,0,0,0,468,469,5,110,0,0,469,470,5,117,0,0,470,
        471,5,108,0,0,471,472,5,108,0,0,472,68,1,0,0,0,473,474,5,95,0,0,
        474,475,5,95,0,0,475,476,5,110,0,0,476,477,5,117,0,0,477,478,5,108,
        0,0,478,479,5,108,0,0,479,480,5,97,0,0,480,481,5,98,0,0,481,482,
        5,108,0,0,482,483,5,101,0,0,483,484,5,95,0,0,484,485,5,95,0,0,485,
        70,1,0,0,0,486,487,5,111,0,0,487,488,5,112,0,0,488,489,5,101,0,0,
        489,490,5,114,0,0,490,491,5,97,0,0,491,492,5,116,0,0,492,493,5,111,
        0,0,493,494,5,114,0,0,494,72,1,0,0,0,495,496,5,112,0,0,496,497,5,
        114,0,0,497,498,5,111,0,0,498,499,5,112,0,0,499,500,5,101,0,0,500,
        501,5,114,0,0,501,502,5,116,0,0,502,503,5,121,0,0,503,74,1,0,0,0,
        504,505,5,112,0,0,505,506,5,117,0,0,506,507,5,98,0,0,507,508,5,108,
        0,0,508,509,5,105,0,0,509,510,5,99,0,0,510,76,1,0,0,0,511,512,5,
        114,0,0,512,513,5,101,0,0,513,514,5,116,0,0,514,515,5,117,0,0,515,
        516,5,114,0,0,516,517,5,110,0,0,517,78,1,0,0,0,518,519,5,115,0,0,
        519,520,5,105,0,0,520,521,5,122,0,0,521,522,5,101,0,0,522,523,5,
        111,0,0,523,524,5,102,0,0,524,80,1,0,0,0,525,526,5,115,0,0,526,527,
        5,116,0,0,527,528,5,97,0,0,528,529,5,116,0,0,529,530,5,105,0,0,530,
        531,5,99,0,0,531,82,1,0,0,0,532,533,5,115,0,0,533,534,5,116,0,0,
        534,535,5,97,0,0,535,536,5,116,0,0,536,537,5,105,0,0,537,538,5,99,
        0,0,538,539,5,95,0,0,539,540,5,97,0,0,540,541,5,115,0,0,541,542,
        5,115,0,0,542,543,5,101,0,0,543,544,5,114,0,0,544,545,5,116,0,0,
        545,84,1,0,0,0,546,547,5,115,0,0,547,548,5,116,0,0,548,549,5,111,
        0,0,549,550,5,99,0,0,550,551,5,107,0,0,551,86,1,0,0,0,552,553,5,
        115,0,0,553,554,5,116,0,0,554,555,5,114,0,0,555,556,5,117,0,0,556,
        557,5,99,0,0,557,558,5,116,0,0,558,88,1,0,0,0,559,560,5,115,0,0,
        560,561,5,119,0,0,561,562,5,105,0,0,562,563,5,116,0,0,563,564,5,
        99,0,0,564,565,5,104,0,0,565,90,1,0,0,0,566,567,5,116,0,0,567,568,
        5,104,0,0,568,569,5,105,0,0,569,570,5,115,0,0,570,92,1,0,0,0,571,
        572,5,116,0,0,572,573,5,114,0,0,573,574,5,117,0,0,574,575,5,101,
        0,0,575,94,1,0,0,0,576,577,5,116,0,0,577,578,5,121,0,0,578,579,5,
        112,0,0,579,580,5,101,0,0,580,581,5,100,0,0,581,582,5,101,0,0,582,
        583,5,102,0,0,583,96,1,0,0,0,584,585,5,116,0,0,585,586,5,121,0,0,
        586,587,5,112,0,0,587,588,5,101,0,0,588,589,5,115,0,0,589,590,5,
        101,0,0,590,591,5,116,0,0,591,98,1,0,0,0,592,593,5,118,0,0,593,594,
        5,105,0,0,594,595,5,101,0,0,595,596,5,119,0,0,596,597,5,95,0,0,597,
        598,5,97,0,0,598,599,5,115,0,0,599,100,1,0,0,0,600,601,5,118,0,0,
        601,602,5,111,0,0,602,603,5,105,0,0,603,604,5,100,0,0,604,102,1,
        0,0,0,605,606,5,119,0,0,606,607,5,104,0,0,607,608,5,105,0,0,608,
        609,5,108,0,0,609,610,5,101,0,0,610,104,1,0,0,0,611,612,5,40,0,0,
        612,106,1,0,0,0,613,614,5,41,0,0,614,108,1,0,0,0,615,616,5,91,0,
        0,616,110,1,0,0,0,617,618,5,93,0,0,618,112,1,0,0,0,619,620,5,123,
        0,0,620,114,1,0,0,0,621,622,5,125,0,0,622,116,1,0,0,0,623,624,5,
        43,0,0,624,118,1,0,0,0,625,626,5,45,0,0,626,120,1,0,0,0,627,628,
        5,42,0,0,628,122,1,0,0,0,629,630,5,47,0,0,630,124,1,0,0,0,631,632,
        5,37,0,0,632,126,1,0,0,0,633,634,5,94,0,0,634,128,1,0,0,0,635,636,
        5,38,0,0,636,130,1,0,0,0,637,638,5,124,0,0,638,132,1,0,0,0,639,640,
        5,126,0,0,640,134,1,0,0,0,641,642,5,33,0,0,642,136,1,0,0,0,643,644,
        5,61,0,0,644,138,1,0,0,0,645,646,5,60,0,0,646,140,1,0,0,0,647,648,
        5,62,0,0,648,142,1,0,0,0,649,650,5,43,0,0,650,651,5,61,0,0,651,144,
        1,0,0,0,652,653,5,45,0,0,653,654,5,61,0,0,654,146,1,0,0,0,655,656,
        5,42,0,0,656,657,5,61,0,0,657,148,1,0,0,0,658,659,5,47,0,0,659,660,
        5,61,0,0,660,150,1,0,0,0,661,662,5,37,0,0,662,663,5,61,0,0,663,152,
        1,0,0,0,664,665,5,94,0,0,665,666,5,61,0,0,666,154,1,0,0,0,667,668,
        5,38,0,0,668,669,5,61,0,0,669,156,1,0,0,0,670,671,5,124,0,0,671,
        672,5,61,0,0,672,158,1,0,0,0,673,674,5,62,0,0,674,675,5,62,0,0,675,
        676,5,62,0,0,676,160,1,0,0,0,677,678,5,62,0,0,678,679,5,62,0,0,679,
        680,5,61,0,0,680,162,1,0,0,0,681,682,5,62,0,0,682,683,5,62,0,0,683,
        164,1,0,0,0,684,685,5,60,0,0,685,686,5,60,0,0,686,687,5,61,0,0,687,
        166,1,0,0,0,688,689,5,60,0,0,689,690,5,60,0,0,690,168,1,0,0,0,691,
        692,5,61,0,0,692,693,5,61,0,0,693,170,1,0,0,0,694,695,5,33,0,0,695,
        696,5,61,0,0,696,172,1,0,0,0,697,698,5,60,0,0,698,699,5,61,0,0,699,
        174,1,0,0,0,700,701,5,62,0,0,701,702,5,61,0,0,702,176,1,0,0,0,703,
        704,5,38,0,0,704,705,5,38,0,0,705,178,1,0,0,0,706,707,5,124,0,0,
        707,708,5,124,0,0,708,180,1,0,0,0,709,710,5,43,0,0,710,711,5,43,
        0,0,711,182,1,0,0,0,712,713,5,45,0,0,713,714,5,45,0,0,714,184,1,
        0,0,0,715,716,5,44,0,0,716,186,1,0,0,0,717,718,5,63,0,0,718,188,
        1,0,0,0,719,720,5,58,0,0,720,190,1,0,0,0,721,722,5,58,0,0,722,723,
        5,58,0,0,723,192,1,0,0,0,724,725,5,59,0,0,725,194,1,0,0,0,726,727,
        5,46,0,0,727,196,1,0,0,0,728,729,5,46,0,0,729,730,5,46,0,0,730,731,
        5,46,0,0,731,198,1,0,0,0,732,737,3,207,103,0,733,736,3,207,103,0,
        734,736,5,95,0,0,735,733,1,0,0,0,735,734,1,0,0,0,736,739,1,0,0,0,
        737,735,1,0,0,0,737,738,1,0,0,0,738,200,1,0,0,0,739,737,1,0,0,0,
        740,741,5,48,0,0,741,742,5,98,0,0,742,747,1,0,0,0,743,746,3,205,
        102,0,744,746,5,95,0,0,745,743,1,0,0,0,745,744,1,0,0,0,746,749,1,
        0,0,0,747,745,1,0,0,0,747,748,1,0,0,0,748,202,1,0,0,0,749,747,1,
        0,0,0,750,751,5,48,0,0,751,752,5,120,0,0,752,775,1,0,0,0,753,755,
        3,209,104,0,754,753,1,0,0,0,754,755,1,0,0,0,755,756,1,0,0,0,756,
        758,3,209,104,0,757,754,1,0,0,0,757,758,1,0,0,0,758,759,1,0,0,0,
        759,761,3,209,104,0,760,757,1,0,0,0,760,761,1,0,0,0,761,762,1,0,
        0,0,762,764,3,209,104,0,763,760,1,0,0,0,763,764,1,0,0,0,764,765,
        1,0,0,0,765,767,3,209,104,0,766,763,1,0,0,0,766,767,1,0,0,0,767,
        768,1,0,0,0,768,770,3,209,104,0,769,766,1,0,0,0,769,770,1,0,0,0,
        770,771,1,0,0,0,771,773,3,209,104,0,772,769,1,0,0,0,772,773,1,0,
        0,0,773,774,1,0,0,0,774,776,3,209,104,0,775,772,1,0,0,0,775,776,
        1,0,0,0,776,204,1,0,0,0,777,778,7,1,0,0,778,206,1,0,0,0,779,780,
        7,2,0,0,780,208,1,0,0,0,781,782,7,3,0,0,782,210,1,0,0,0,783,786,
        8,4,0,0,784,786,3,215,107,0,785,783,1,0,0,0,785,784,1,0,0,0,786,
        212,1,0,0,0,787,790,8,5,0,0,788,790,3,215,107,0,789,787,1,0,0,0,
        789,788,1,0,0,0,790,214,1,0,0,0,791,795,3,221,110,0,792,795,3,217,
        108,0,793,795,3,219,109,0,794,791,1,0,0,0,794,792,1,0,0,0,794,793,
        1,0,0,0,795,216,1,0,0,0,796,811,5,92,0,0,797,799,7,1,0,0,798,797,
        1,0,0,0,798,799,1,0,0,0,799,801,1,0,0,0,800,802,3,207,103,0,801,
        800,1,0,0,0,801,802,1,0,0,0,802,803,1,0,0,0,803,812,3,207,103,0,
        804,805,5,50,0,0,805,806,7,6,0,0,806,812,3,207,103,0,807,808,5,50,
        0,0,808,809,5,53,0,0,809,810,1,0,0,0,810,812,7,7,0,0,811,798,1,0,
        0,0,811,804,1,0,0,0,811,807,1,0,0,0,812,814,1,0,0,0,813,815,5,59,
        0,0,814,813,1,0,0,0,814,815,1,0,0,0,815,218,1,0,0,0,816,817,5,92,
        0,0,817,818,5,120,0,0,818,823,1,0,0,0,819,821,3,209,104,0,820,819,
        1,0,0,0,820,821,1,0,0,0,821,822,1,0,0,0,822,824,3,209,104,0,823,
        820,1,0,0,0,823,824,1,0,0,0,824,826,1,0,0,0,825,827,5,59,0,0,826,
        825,1,0,0,0,826,827,1,0,0,0,827,220,1,0,0,0,828,837,5,92,0,0,829,
        838,7,8,0,0,830,832,5,13,0,0,831,833,5,10,0,0,832,831,1,0,0,0,832,
        833,1,0,0,0,833,836,1,0,0,0,834,836,5,10,0,0,835,830,1,0,0,0,835,
        834,1,0,0,0,836,838,1,0,0,0,837,829,1,0,0,0,837,835,1,0,0,0,838,
        222,1,0,0,0,839,841,7,9,0,0,840,839,1,0,0,0,841,842,1,0,0,0,842,
        840,1,0,0,0,842,843,1,0,0,0,843,844,1,0,0,0,844,845,6,111,1,0,845,
        224,1,0,0,0,846,848,5,13,0,0,847,849,5,10,0,0,848,847,1,0,0,0,848,
        849,1,0,0,0,849,852,1,0,0,0,850,852,5,10,0,0,851,846,1,0,0,0,851,
        850,1,0,0,0,852,853,1,0,0,0,853,854,6,112,1,0,854,226,1,0,0,0,855,
        856,5,47,0,0,856,857,5,42,0,0,857,861,1,0,0,0,858,860,9,0,0,0,859,
        858,1,0,0,0,860,863,1,0,0,0,861,862,1,0,0,0,861,859,1,0,0,0,862,
        864,1,0,0,0,863,861,1,0,0,0,864,865,5,42,0,0,865,866,5,47,0,0,866,
        867,1,0,0,0,867,868,6,113,1,0,868,228,1,0,0,0,869,870,5,47,0,0,870,
        871,5,47,0,0,871,875,1,0,0,0,872,874,8,10,0,0,873,872,1,0,0,0,874,
        877,1,0,0,0,875,873,1,0,0,0,875,876,1,0,0,0,876,878,1,0,0,0,877,
        875,1,0,0,0,878,879,6,114,1,0,879,230,1,0,0,0,880,884,7,11,0,0,881,
        883,7,12,0,0,882,881,1,0,0,0,883,886,1,0,0,0,884,882,1,0,0,0,884,
        885,1,0,0,0,885,232,1,0,0,0,886,884,1,0,0,0,47,0,236,242,249,251,
        258,260,264,266,273,280,288,293,298,303,311,735,737,745,747,754,
        757,760,763,766,769,772,775,785,789,794,798,801,811,814,820,823,
        826,832,835,837,842,848,851,861,875,884,2,0,1,0,6,0,0
    ]

class SourcePawnLexer(Lexer):

    atn = ATNDeserializer().deserialize(serializedATN())

    decisionsToDFA = [ DFA(ds, i) for i, ds in enumerate(atn.decisionToState) ]

    IntegerLiteral = 1
    CharacterLiteral = 2
    FloatLiteral = 3
    StringLiteral = 4
    BooleanLiteral = 5
    HandleLiteral = 6
    MultiLineMacro = 7
    Directive = 8
    Any = 9
    Bool = 10
    Break = 11
    Case = 12
    CellsOf = 13
    Char = 14
    Const = 15
    Continue = 16
    Default = 17
    Defined = 18
    Delete = 19
    Do = 20
    Else = 21
    Enum = 22
    False_ = 23
    Float = 24
    Forward = 25
    Function = 26
    For = 27
    Handle = 28
    If = 29
    Int = 30
    Methodmap = 31
    Native = 32
    New = 33
    Null = 34
    Nullable = 35
    Operator = 36
    Property = 37
    Public = 38
    Return = 39
    SizeOf = 40
    Static = 41
    StaticAssert = 42
    Stock = 43
    Struct = 44
    Switch = 45
    This = 46
    True_ = 47
    TypeDef = 48
    TypeSet = 49
    ViewAs = 50
    Void = 51
    While = 52
    LeftParen = 53
    RightParen = 54
    LeftBracket = 55
    RightBracket = 56
    LeftBrace = 57
    RightBrace = 58
    Plus = 59
    Minus = 60
    Star = 61
    Div = 62
    Mod = 63
    Caret = 64
    And = 65
    Or = 66
    Tilde = 67
    Not = 68
    Assign = 69
    Less = 70
    Greater = 71
    PlusAssign = 72
    MinusAssign = 73
    StarAssign = 74
    DivAssign = 75
    ModAssign = 76
    XorAssign = 77
    AndAssign = 78
    OrAssign = 79
    RightShiftUnsigned = 80
    RightShiftAssign = 81
    RightShift = 82
    LeftShiftAssign = 83
    LeftShift = 84
    Equal = 85
    NotEqual = 86
    LessEqual = 87
    GreaterEqual = 88
    AndAnd = 89
    OrOr = 90
    PlusPlus = 91
    MinusMinus = 92
    Comma = 93
    Question = 94
    Colon = 95
    DoubleColon = 96
    Semi = 97
    Dot = 98
    Ellipsis = 99
    DecimalLiteral = 100
    BinaryLiteral = 101
    HexLiteral = 102
    Whitespace = 103
    Newline = 104
    BlockComment = 105
    LineComment = 106
    Identifier = 107

    channelNames = [ u"DEFAULT_TOKEN_CHANNEL", u"HIDDEN" ]

    modeNames = [ "DEFAULT_MODE" ]

    literalNames = [ "<INVALID>",
            "'any'", "'bool'", "'break'", "'case'", "'cellsof'", "'char'", 
            "'const'", "'continue'", "'default'", "'defined'", "'delete'", 
            "'do'", "'else'", "'enum'", "'false'", "'float'", "'forward'", 
            "'function'", "'for'", "'Handle'", "'if'", "'int'", "'methodmap'", 
            "'native'", "'new'", "'null'", "'__nullable__'", "'operator'", 
            "'property'", "'public'", "'return'", "'sizeof'", "'static'", 
            "'static_assert'", "'stock'", "'struct'", "'switch'", "'this'", 
            "'true'", "'typedef'", "'typeset'", "'view_as'", "'void'", "'while'", 
            "'('", "')'", "'['", "']'", "'{'", "'}'", "'+'", "'-'", "'*'", 
            "'/'", "'%'", "'^'", "'&'", "'|'", "'~'", "'!'", "'='", "'<'", 
            "'>'", "'+='", "'-='", "'*='", "'/='", "'%='", "'^='", "'&='", 
            "'|='", "'>>>'", "'>>='", "'>>'", "'<<='", "'<<'", "'=='", "'!='", 
            "'<='", "'>='", "'&&'", "'||'", "'++'", "'--'", "','", "'?'", 
            "':'", "'::'", "';'", "'.'", "'...'" ]

    symbolicNames = [ "<INVALID>",
            "IntegerLiteral", "CharacterLiteral", "FloatLiteral", "StringLiteral", 
            "BooleanLiteral", "HandleLiteral", "MultiLineMacro", "Directive", 
            "Any", "Bool", "Break", "Case", "CellsOf", "Char", "Const", 
            "Continue", "Default", "Defined", "Delete", "Do", "Else", "Enum", 
            "False_", "Float", "Forward", "Function", "For", "Handle", "If", 
            "Int", "Methodmap", "Native", "New", "Null", "Nullable", "Operator", 
            "Property", "Public", "Return", "SizeOf", "Static", "StaticAssert", 
            "Stock", "Struct", "Switch", "This", "True_", "TypeDef", "TypeSet", 
            "ViewAs", "Void", "While", "LeftParen", "RightParen", "LeftBracket", 
            "RightBracket", "LeftBrace", "RightBrace", "Plus", "Minus", 
            "Star", "Div", "Mod", "Caret", "And", "Or", "Tilde", "Not", 
            "Assign", "Less", "Greater", "PlusAssign", "MinusAssign", "StarAssign", 
            "DivAssign", "ModAssign", "XorAssign", "AndAssign", "OrAssign", 
            "RightShiftUnsigned", "RightShiftAssign", "RightShift", "LeftShiftAssign", 
            "LeftShift", "Equal", "NotEqual", "LessEqual", "GreaterEqual", 
            "AndAnd", "OrOr", "PlusPlus", "MinusMinus", "Comma", "Question", 
            "Colon", "DoubleColon", "Semi", "Dot", "Ellipsis", "DecimalLiteral", 
            "BinaryLiteral", "HexLiteral", "Whitespace", "Newline", "BlockComment", 
            "LineComment", "Identifier" ]

    ruleNames = [ "IntegerLiteral", "CharacterLiteral", "FloatLiteral", 
                  "StringLiteral", "BooleanLiteral", "HandleLiteral", "MultiLineMacro", 
                  "Directive", "Any", "Bool", "Break", "Case", "CellsOf", 
                  "Char", "Const", "Continue", "Default", "Defined", "Delete", 
                  "Do", "Else", "Enum", "False_", "Float", "Forward", "Function", 
                  "For", "Handle", "If", "Int", "Methodmap", "Native", "New", 
                  "Null", "Nullable", "Operator", "Property", "Public", 
                  "Return", "SizeOf", "Static", "StaticAssert", "Stock", 
                  "Struct", "Switch", "This", "True_", "TypeDef", "TypeSet", 
                  "ViewAs", "Void", "While", "LeftParen", "RightParen", 
                  "LeftBracket", "RightBracket", "LeftBrace", "RightBrace", 
                  "Plus", "Minus", "Star", "Div", "Mod", "Caret", "And", 
                  "Or", "Tilde", "Not", "Assign", "Less", "Greater", "PlusAssign", 
                  "MinusAssign", "StarAssign", "DivAssign", "ModAssign", 
                  "XorAssign", "AndAssign", "OrAssign", "RightShiftUnsigned", 
                  "RightShiftAssign", "RightShift", "LeftShiftAssign", "LeftShift", 
                  "Equal", "NotEqual", "LessEqual", "GreaterEqual", "AndAnd", 
                  "OrOr", "PlusPlus", "MinusMinus", "Comma", "Question", 
                  "Colon", "DoubleColon", "Semi", "Dot", "Ellipsis", "DecimalLiteral", 
                  "BinaryLiteral", "HexLiteral", "BINARYDIGIT", "DIGIT", 
                  "HEXDIGIT", "Schar", "Cchar", "Escapesequence", "Decimalescapesequence", 
                  "Hexadecimalescapesequence", "Simplesscapesequence", "Whitespace", 
                  "Newline", "BlockComment", "LineComment", "Identifier" ]

    grammarFileName = "SourcePawnLexer.g4"

    def __init__(self, input=None, output:TextIO = sys.stdout):
        super().__init__(input, output)
        self.checkVersion("4.10.1")
        self._interp = LexerATNSimulator(self, self.atn, self.decisionsToDFA, PredictionContextCache())
        self._actions = None
        self._predicates = None


